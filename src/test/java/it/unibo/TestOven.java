package it.unibo;


import static org.junit.jupiter.api.Assertions.assertFalse;

// Generated by CodiumAI

import static org.junit.jupiter.api.Assertions.assertTrue;

import org.junit.jupiter.api.Test;

import it.unibo.model.impl.*;

public class TestOven {


    // Oven is initially empty
    @Test
    public void testInitiallyEmpty() {
        OvenImpl oven = new OvenImpl();
        assertTrue(oven.isOvenEmpty());
    }

    
    // Test if baking a pizza sets oven to not empty
    @Test
    public void testBakingPizzaSetsOvenNotEmpty() {
        OvenImpl oven = new OvenImpl();
        oven.bakingPizza();
        assertFalse(oven.isOvenEmpty());
    }

        // calling isPizzaCooked() on an OvenImpl instance before bakingPizza() is called returns false
        @Test
        public void testIsPizzaCookedBeforeBakingReturnsFalse() {
            OvenImpl oven = new OvenImpl();
            assertFalse(oven.isPizzaCooked());
        }

            // calling isPizzaCooked() on an OvenImpl instance before the cooking time has elapsed returns false
    @Test
    public void testIsPizzaCookedBeforeTimeElapsedReturnsFalse() {
        OvenImpl oven = new OvenImpl();
        oven.bakingPizza();
        assertFalse(oven.isPizzaCooked());
    }

        // calling bakingPizza() on an OvenImpl instance twice in a row sets the oven as not empty and resets the cooking time
        @Test
        public void testBakingPizzaTwiceSetsOvenNotEmptyAndResetsCookingTime() {
            OvenImpl oven = new OvenImpl();
            oven.bakingPizza();
            oven.bakingPizza();
            assertFalse(oven.isOvenEmpty());
            assertFalse(oven.isPizzaCooked());
        }
}
